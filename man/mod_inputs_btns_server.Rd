% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mod_inputs_btns.R
\name{mod_inputs_btns_server}
\alias{mod_inputs_btns_server}
\alias{test_mod_inputs_btn}
\alias{test_mod_inputs_btn_static_ui}
\alias{mod_inputs_btns_ui}
\title{(internal) Module with buttons logic for the input page}
\usage{
mod_inputs_btns_server(
  id = NULL,
  sim_export_dta = reactive(NULL),
  n_policy = c(1, 2, 1),
  n_policy_type = c("numericInline", "numeric", "slider", "dropdown", "none"),
  ...
)

test_mod_inputs_btn(id = NULL, n_policy_type = "slider")

test_mod_inputs_btn_static_ui(di = NULL)

mod_inputs_btns_ui(id = NULL, ...)
}
\arguments{
\item{id}{namespace id (internal shiny parameter) used in the the UI module.}

\item{sim_export_dta}{Reactive internal with all the simulation data
that is used by the server to export simulation inputs results.}

\item{n_policy}{vector of 3 numeric values c(1,2,1) by default.
The first and the second are minimum and maximum number of policy choices.
The numeric is the initialized number of policy choices.}

\item{n_policy_type}{character that defines types of the the changer of the
the number of policy scenarios. Could be one of "numericInline" (default),
"numeric", "slider", "dropdown", and "none".}

\item{...}{not used}
}
\description{
`mod_inputs_btns_ui()` UI part of the module.

`mod_inputs_btns_server()` UI part of the module.

`test_mod_inputs_btn_static_ui()` test-function for the static buttons
appearance. Launches a simple shiny app that displays a static buttons UI.

`test_mod_inputs_btn()` test-function for checking buttons with
the server-generated number of policies. Launches a shiny app with
}
\examples{
\dontshow{if (interactive()) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}

# Launches an app with all the buttons in a static form
test_mod_inputs_btn_static_ui()

# Launches an app with all types of policy number input and extra diagnostic
test_mod_inputs_btn()
\dontshow{\}) # examplesIf}
}
