% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fct_input_ui.R, R/fct_tab_input_ui.R
\name{load_input_xlsx}
\alias{load_input_xlsx}
\alias{inp_str_test}
\alias{gen_inp_str_front}
\alias{gen_inp_str}
\alias{test_gen_inp_front_simple}
\alias{test_gen_inp_front_tabs}
\alias{test_gen_inp_front_tabs_file}
\alias{load_inputtabs_xlsx}
\alias{load_inputtables_xlsx}
\title{Loads the input structure data into R  from an Excel file.}
\usage{
load_input_xlsx(path)

inp_str_test(
  inp_raw_str,
  fn_inp_str = gen_inp_str,
  fn_inp_ui = gen_tabinp_ui,
  ns = NS(NULL),
  ...
)

gen_inp_str_front(inp_table_str = NULL, ...)

gen_inp_str(inp_raw_str, n_choices, inp_table_str = NULL, ns = NS(NULL), ...)

test_gen_inp_front_simple(
  inp_raw_str,
  inp_tab_str = NULL,
  inp_table_str = NULL,
  n_choices = 2
)

test_gen_inp_front_tabs(
  inp_raw_str,
  inp_tab_str = NULL,
  inp_table_str = NULL,
  n_choices = 2
)

test_gen_inp_front_tabs_file(path)

load_inputtabs_xlsx(path)

load_inputtables_xlsx(path)
}
\arguments{
\item{path}{path to a pre-defined Excel file#'}

\item{inp_raw_str}{inputs structure as returned by `load_input_xlsx()`}

\item{fn_inp_str, fn_inp_ui, ns}{internal supporting functions.}

\item{ns}{name space function `NS(NULL)` by default}

\item{...}{passed to functions within}

\item{inp_table_str}{structure of tables under which inputs are organized (NULL by default)}

\item{n_choices}{number of policy choices to generate}

\item{inp_raw_str, inp_tab_str, inp_table_str, n_choices}{input layout options}
}
\value{
a data frame with the detailed input structure.
}
\description{
Loads the input structure data into R  from an Excel file.
}
\section{Functions}{
\itemize{
\item \code{inp_str_test()}: Test if RAW inputs structure generates a set of UI
elements and returns a very long list with HTML tags and elements used for
building the UI. If it fails, it indicates that the app will likely fail
as well.

\item \code{gen_inp_str_front()}: Wrapper around `gen_inp_str()` used for
providing table structure inside other functions. Returns `gen_inp_str()`
function with predefined parameters and data that can be executed for
generating input structure.

\item \code{gen_inp_str()}: Generate a data frame of the inputs UI used in creating the inputs page UI

\item \code{test_gen_inp_front_simple()}: Test input page content generation in a single tab

\item \code{test_gen_inp_front_tabs()}: Test input UI generation process by providing
path to the inputs structure Excel file. It Launches a shiny app with
all inputs properly rendered in a single input tab.

\item \code{test_gen_inp_front_tabs_file()}: Does the same as `test_gen_inp_front_tabs()`, but
on top of input generation also creates tabs for switching between groups of
inputs.

\item \code{load_inputtabs_xlsx()}: Loads RAW structure of the tabs that should be
used for structuring inputs

\item \code{load_inputtables_xlsx()}: Loads RAW structure of the tables for organizing
inputs on the input page.

}}
\examples{
\dontrun{
system.file(
  "examples",
  "ceq_example_simple",
  "data-app",
  "simple-inputs-structure.xlsx",
  package = "devCEQ"
) |> load_input_xlsx()
}


\dontrun{
}

\dontrun{
a <- system.file(
    "examples",
    "ceq_example_simple",
    "data-app",
    "simple-inputs-structure.xlsx",
    package = "devCEQ"
  ) |> load_input_xlsx()
a |> test_gen_inp_front_simple()
}

\dontrun{
}
\dontrun{
}
}
