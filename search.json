[{"path":"https://wbepl.github.io/devCEQ/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 devCEQ authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://wbepl.github.io/devCEQ/articles/microsim-stata.html","id":"example-of-a-microsimulation-in-stata","dir":"Articles","previous_headings":"","what":"Example of a microsimulation in Stata","title":"Running microsimulations in Stata","text":"example, let us follow “dummy” version microsimulation: Example_FiscalSim. developed training future microsim developers exemplifies best practices fiscal microsimulation development.","code":""},{"path":"https://wbepl.github.io/devCEQ/articles/microsim-stata.html","id":"setting-up-the-working-directory","dir":"Articles","previous_headings":"Example of a microsimulation in Stata","what":"Setting up the working directory","title":"Running microsimulations in Stata","text":"Create folder cloud drive (better synchronized drive), later develop R Shiny translation microsimulation. case, folder EPL/devCEQaux. Clone folder example microsimulation Stata : https://github.com/wbEPL/Example_FiscalSim. Open Example_FiscalSim folder explore content. can see directory tree , Example_FiscalSim contains folders. /01.Data/ folder turn three sub folders /01.pre-simulation/, /02.intermediate/, /03.simulation-results/ two data files raw data Example_FiscalSim_dem_inc_data_raw.dta, Example_FiscalSim_exp_data_raw.dta. Ultimately, raw data outside project, packed together simplicity. /01.Data/01.pre-simulation/ place pre-simulation data stored per data flow structure . /02.Dofile/ place simulation code developed. Key simulation code scripts 01_.._.12_output.. /02.Dofile/00_master.master script running simulation. /03.Tool/Example_FiscalSim.xlsx Excel file simulation inputs (policy parameters, tax rates, subsidies) outputs (poverty inequality estimates, incidences, etc.).","code":"./devCEQaux/ └── Example_FiscalSim     ├── 01.Data     │   ├── 01.pre-simulation     │   ├── 02.intermediate     │   ├── 03.simulation-results     │   ├── Example_FiscalSim_dem_inc_data_raw.dta     │   └── Example_FiscalSim_exp_data_raw.dta     ├── 02.Dofile     │   ├── 00_master.do     │   ├── 01_input_data.do     │   ├── 02_gross_market_income.do     │   ├── 03_net_expenditures.do     │   ├── 04_income_uprating.do     │   ├── 05_SSC_direct_taxes.do     │   ├── 06_pensions_direct_transfers.do     │   ├── 07_expenditure_adjustment.do     │   ├── 08_indirect_subsidies.do     │   ├── 09_indirect_taxes.do     │   ├── 10_inkind_transfers.do     │   ├── 11_income_concepts.do     │   ├── 12_output.do     │   ├── ados     │   │   ├── ...     │   └── Example_FiscalSim.stpr     ├── 03.Tool     │   └── Example_FiscalSim.xlsx     └── README.md"},{"path":"https://wbepl.github.io/devCEQ/articles/microsim-stata.html","id":"running-pre-simulation-in-stata","dir":"Articles","previous_headings":"Example of a microsimulation in Stata","what":"Running pre-simulation in Stata","title":"Running microsimulations in Stata","text":"run Stata pre-simulation, need : Open /02.Dofile/00_master.. Set global variable path lines 10-30 /Example_FiscalSim/ save . Execute /02.Dofile/00_master.beginning *Simulation stage (Lines 1-89). execute pre-simulation part analysis creating pre-simulation data sets (see folder structure ). may notice now, data files added 01.Data/01.pre-simulation folder. files used simulation change simulation simulation. change policy parameters changing. also serve backbone simulation translation R. error prompted, troubleshoot . likely global variable path set properly.","code":"./devCEQaux/ └── Example_FiscalSim     ├── 01.Data     │   ├── 01.pre-simulation     │   │   ├── Example_FiscalSim_dem_data_SY.dta     │   │   ├── Example_FiscalSim_dem_inc_data.dta     │   │   ├── Example_FiscalSim_electr_data.dta     │   │   ├── Example_FiscalSim_exp_data_SY.dta     │   │   └── Example_FiscalSim_market_income_data_SY.dta     │   ├── 02.intermediate     │   ├── 03.simulation-results     │   ├── Example_FiscalSim_dem_inc_data_raw.dta     │   └── Example_FiscalSim_exp_data_raw.dta     ├── 02.Dofile     │   ├── ...     │   └── ados     │       ├── ...     ├── 03.Tool     │   └── Example_FiscalSim.xlsx     └── README.md"},{"path":"https://wbepl.github.io/devCEQ/articles/microsim-stata.html","id":"executing-full-simulation-in-stata","dir":"Articles","previous_headings":"Example of a microsimulation in Stata","what":"Executing full simulation in Stata","title":"Running microsimulations in Stata","text":"run full simulation Stata, need : Open /02.Dofile/00_master.previous changes make sure pre-simulation step executed correctly. Comment pre-simulation stage (lines 83-89). Execute full simulation beginning end (line 1 end 00_master.) Excel file simulation results open end able explore simulation results.","code":""},{"path":"https://wbepl.github.io/devCEQ/articles/microsim-stata.html","id":"saving-intermediate-results-from-stata","dir":"Articles","previous_headings":"Example of a microsimulation in Stata","what":"Saving intermediate results from Stata","title":"Running microsimulations in Stata","text":"Sometimes, simulations long, implementing tedious process simulation translation, re-implementing complex analysis R, might need save intermediate data sets Stata. Please make sure saving data /01.Data/02.intermediate/ folder using regular Stata commands :","code":"save \"${data}\\02.intermediate\\interm_data_1.dta\", replace"},{"path":"https://wbepl.github.io/devCEQ/articles/r-workflow.html","id":"working-directory","dir":"Articles","previous_headings":"","what":"Working directory","title":"Setting up a workflow in R","text":"one previous steps, : Created folder project translating microsimulation EPL/devCEQaux. Cloned example microsimulation Stata https://github.com/wbEPL/Example_FiscalSim folder EPL/devCEQaux/Example_FiscalSim/. Now, need create project analysis R, subsequently become place, develop R Shiny application microsimulation.","code":""},{"path":"https://wbepl.github.io/devCEQ/articles/r-workflow.html","id":"creating-an-rstudio-project","dir":"Articles","previous_headings":"Working directory","what":"Creating an RStudio project","title":"Setting up a workflow in R","text":"root folder, perform translation analysis R execute Stata code, (example, EPL/devCEQaux folder) create R Studio project. Familiarize RStudio project basics needed R4DS. Workflow: scripts projects. example, use name Stata project add “_app” . result : “Example_FiscalSim_app”. way discriminate original Stata project R version . Note. R Studio project folder, file Example_FiscalSim_app.Rproj. Double-clicking file start R Studio . result following folder structure:","code":"./EPL/devCEQaux ├── Example_FiscalSim │   ├── 01.Data │   │   └── ... │   ├── 02.Dofile │   │   └── ... │   ├── 03.Tool │   │   └── Example_FiscalSim.xlsx │   └── README.md └── Example_FiscalSim_app     └── Example_FiscalSim_app.Rproj"},{"path":"https://wbepl.github.io/devCEQ/articles/r-workflow.html","id":"organizing-files-in-the-r-project-","dir":"Articles","previous_headings":"Working directory","what":"Organizing files in the R Project.","title":"Setting up a workflow in R","text":"general principles file organization R project : R folder used functions, scripts. data-app folder data used inside shiny app (input structure data file, pre-simulation data, baseline simulation results). dev folder one, place scripts. usually develop scripts re-saving pre-simulation data, performing manual quality assurance routines, developing validating simulation code R. inst/app folder exists auxiliary shiny-app related files, info-page.md markdown document shiny app landing page. root directory R project, : .gitignore file relevant git. project_name.proj file used launch R Studio current project. DESCRIPTION internal file relevant R package development. app.R key r script, launch shiny app. Now, create folder structure suggested (files). result roughly following:","code":""},{"path":"https://wbepl.github.io/devCEQ/articles/r-workflow.html","id":"creating-and-saving-the-first-script-in-r","dir":"Articles","previous_headings":"Working directory","what":"Creating and saving the first script in R","title":"Setting up a workflow in R","text":"Now, let us create first scrip R save name example-script.R dev folder. Try follow steps animation.","code":""},{"path":"https://wbepl.github.io/devCEQ/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Eduard Bukin. Author, maintainer.","code":""},{"path":"https://wbepl.github.io/devCEQ/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bukin E (2024). devCEQ: Development platform Shiny fiscal microsimulations. R package version 0.0.0.9026, https://wbepl.github.io/devCEQ/.","code":"@Manual{,   title = {devCEQ: Development platform for Shiny fiscal microsimulations},   author = {Eduard Bukin},   year = {2024},   note = {R package version 0.0.0.9026},   url = {https://wbepl.github.io/devCEQ/}, }"},{"path":"https://wbepl.github.io/devCEQ/index.html","id":"devceq-development-platform-for-shiny-fiscal-microsimulations","dir":"","previous_headings":"","what":"Development platform for Shiny fiscal microsimulations","title":"Development platform for Shiny fiscal microsimulations","text":"R package contains standardized infrastructure developing deploying country-specific fiscal microsimulations Shiny apps Poverty Equity Policy Lab. main goal apps provide users visual interface executing complex microsimulations, summarizing results. several apps deployed using devCEQ infrastructure: Senegal CEQ 2018, Côte d’Ivoire CEQ, Benin CEQ, Indonesia CEQ. devCEQ package evolved result developing independent apps Armenia v1 Armenia v2, El Salvador, Turkey, Romania CEQ, various aspects requirements application tested first. Essentially, devCEQ R Package standardizes data flow within microsimulation wraps user interface. package, developers can customize inputs page. Develop embed data simulation methodology core microsimulation. Finally built custom visualization either recycling existing modules developing new ones better results communication. example app .","code":""},{"path":[]},{"path":"https://wbepl.github.io/devCEQ/index.html","id":"pre-requisites","dir":"","previous_headings":"Getting started","what":"Pre-requisites","title":"Development platform for Shiny fiscal microsimulations","text":"expected everyone familiar Stata, can independently run CEQ-like microsimulations Stata, change code save different stages microsimulation analysis. Install latest versions R, Rtools, R Studio. Install GitHub Desktop familiarize basics workflow using Git Github.","code":""},{"path":"https://wbepl.github.io/devCEQ/index.html","id":"install-devceq-package","dir":"","previous_headings":"Getting started","what":"Install devCEQ package","title":"Development platform for Shiny fiscal microsimulations","text":"important package backbone microsimulation analysis. install , run console:","code":"if (!require(\"remotes\")) {   install.packages(\"remotes\") } remotes::install_github(\"wbEPL/devCEQ\", dependencies = TRUE, build_vignettes = FALSE)"},{"path":"https://wbepl.github.io/devCEQ/index.html","id":"run-an-example-microsimulation-app","dir":"","previous_headings":"Getting started","what":"Run an example microsimulation app","title":"Development platform for Shiny fiscal microsimulations","text":"Now, launch exemplary microsimulation app, run following command R console:  example shiny app supplied along package devCEQ. may explore content app structure navigating folder, located. located package , check folder, app , type R console. can also create local copy microsimulation app drive explore modify/develop components. , run code . Make sure provide proper path place, want app created. path argument specify folder, app well name app (“./FOLDER/AppName”). function create folders automatically. Template microsim app following structure, explore detail specific articles app development.","code":"library(devCEQ) CEQ_run_example() system.file(\"examples\", \"ceq_example_simple\", package = \"devCEQ\") |>    utils::browseURL() library(devCEQ) create_microsim(\"./microsim_simple_example\") ../microsim_simple_example ├── app.R ├── data-app │   └── simple-inputs-structure.xlsx ├── DESCRIPTION ├── inst │   └── app │       └── info-page.md ├── LICENSE ├── microsim_simple_example.Rproj ├── NAMESPACE ├── R │   ├── app_config.R │   ├── fct_simulation.R │   ├── fct_variables.R │   ├── mod_gini_povertyresults.R │   ├── mod_inc_ncp.R │   ├── mod_results.R │   └── _disable_autoload.R └── README.md"},{"path":"https://wbepl.github.io/devCEQ/index.html","id":"the-process-of-developing-a-microsimulation-and-its-shiny-app","dir":"","previous_headings":"","what":"The process of developing a microsimulation and its SHiny app","title":"Development platform for Shiny fiscal microsimulations","text":"guide/website meant equip users key skills need developing user interface microsimulation tools R Shiny. Follow tutorials consecutive order Articles . Limited functional documentation also available References. Overall, process microsimulation development consists two broad stages: Developing microsimulation Stata (Excel data input/output) polishing simulation methodology dissemination-ready state. ‘Translating’ final Stata microsimulation R, optimizing analysis, building Shiny dashboard around . first stage described detail, however, article Running microsimulations Stata contains best practices developing microsimulations Stata. Users advised follow examples article set properly workflow translating microsimulation Stata R. second stage focus guide. second stage, translation Stata methodology R happening Shiny dashboard created. translation process logical steps outlined . Several articles developed step. Please follow articles gradually reproduce examples familiarize translation process. Converting simulation methodology Stata R. Running microsimulations Stata Setting workflow R Re-saving pre-simulation data R Translating Stata code R comparing results R Stata Common R functions/approaches used translating standard Stata commands Automating inputs provision R Designing input page dashboard. Building inputs structure table testing layout app Advanced topics: tabs, input sub-tables, checkboxes, radio buttons Designing output page (visualization page) dashboard Defining key variables used output building Running exemplary visualization modules Using Stata inputs build moc-visualization page Advances topics: customizing output visualization Integrating input page, output page, simulation logic single dashboard","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/CEQ_run.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the Shiny Application — CEQ_run","title":"Run the Shiny Application — CEQ_run","text":"Run Shiny Application","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/CEQ_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the Shiny Application — CEQ_run","text":"","code":"CEQ_run(   onStart = NULL,   options = list(),   enableBookmarking = NULL,   uiPattern = \"/\",   inputs_str,   presim,   baseline_dta = reactive(tibble(var = \"Baseline from `CEQ_run`\")),   n_policy = c(1, 2, 1),   n_policy_type = c(\"numericInline\", \"numeric\", \"slider\", \"dropdown\", \"none\"),   server_fn = CEQ_server,   ui_fn = CEQ_ui,   inp_str_fn = gen_inp_str,   ui_gen_fn = gen_tabinp_ui,   ceq_fn = function(inps, presim) {      tibble(var = \"Results from `CEQ_run`\")  },   info_page_md = NULL,   info_page_size = \"l\",   fn_sim_srvr = make_run_sim_server(),   fn_add_missing_inp = NULL,   fn_ceq_sim = NULL,   fn_ceq_pre_postsim = NULL,   fn_postsim_srvr = mod_generic_run_postsim_server,   fn_ceq_postsim = function(x, ...) x,   fn_res_disp_srvr = fn_results_display_server_dummy,   ... )  CEQ_run_example(...)"},{"path":"https://wbepl.github.io/devCEQ/reference/CEQ_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the Shiny Application — CEQ_run","text":"inputs_str UI inputs structure read `load_input_xlsx` another custom function. presim reactive list pre-simulation parameters relevant analysis n_policy vector 3 numeric values c(1,2,1) default. first second minimum maximum number policy choices. numeric initialized number policy choices. n_policy_type character defines types changer number policy scenarios. one \"numericInline\" (default), \"numeric\", \"slider\", \"dropdown\", \"none\". ... used","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/CEQ_run.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Run the Shiny Application — CEQ_run","text":"CEQ_run_example(): Run example shiny app elementary CEQ analysis","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/CEQ_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"The application User-Interface — CEQ_ui","title":"The application User-Interface — CEQ_ui","text":"application User-Interface","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/CEQ_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The application User-Interface — CEQ_ui","text":"","code":"CEQ_ui(   request,   theme_fn = function() {      bslib::bs_theme(version = 4, bootswatch = \"flatly\",     `enable-rounded` = TRUE)  },   style_logo_position = NULL,   inp_nav_width = NULL,   fn_results_ui = fn_results_ui_dummy,   ... )"},{"path":"https://wbepl.github.io/devCEQ/reference/CEQ_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The application User-Interface — CEQ_ui","text":"request Internal parameter `shiny`. REMOVE.","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/agg_by_deciles.html","id":null,"dir":"Reference","previous_headings":"","what":"aggregate cariables of a single simulaiton by decile — agg_by_deciles","title":"aggregate cariables of a single simulaiton by decile — agg_by_deciles","text":"aggregate cariables single simulaiton decile","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/agg_by_deciles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"aggregate cariables of a single simulaiton by decile — agg_by_deciles","text":"","code":"agg_by_deciles(   dta,   policy_name = NA_character_,   dec_by,   dec_vars,   n_dec = 10,   wt_var = NULL,   get_var_fn = get_var_nm,   dec_min_level = NULL,   dec_max_level = NULL,   ... )"},{"path":"https://wbepl.github.io/devCEQ/reference/calc_agg_by.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregates all relevant CEQ results by variable. — calc_agg_by","title":"Aggregates all relevant CEQ results by variable. — calc_agg_by","text":"Aggregates relevant CEQ results variable.","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/calc_agg_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregates all relevant CEQ results by variable. — calc_agg_by","text":"","code":"calc_agg_by(dta, vars, by_var, wt_var = get_wt_nm())"},{"path":"https://wbepl.github.io/devCEQ/reference/calc_agg_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregates all relevant CEQ results by variable. — calc_agg_by","text":"dta data frame simulation results. by_var character name grouping variable wt_var character name single variable used weighting variable calculation. Default get_wt_nm()$var. wt_var provided one provided present `dta`, warning prompted.","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/calc_deciles.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate N qualtiles of a variables from the CEQ results — calc_deciles","title":"Calculate N qualtiles of a variables from the CEQ results — calc_deciles","text":"Calculate N qualtiles variables CEQ results","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/calc_deciles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate N qualtiles of a variables from the CEQ results — calc_deciles","text":"","code":"calc_deciles(   dta,   dec_var,   n_dec = 10,   wt_var = get_wt_nm(),   dec_var_name = \"{.col}_decile\",   dec_min_level = NULL,   dec_max_level = NULL,   ... )"},{"path":"https://wbepl.github.io/devCEQ/reference/calc_deciles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate N qualtiles of a variables from the CEQ results — calc_deciles","text":"dta data frame simulation results. n_dec number quantiles/deciles create. Default 10. wt_var character name single variable used weighting variable calculation. Default get_wt_nm()$var. wt_var provided one provided present `dta`, warning prompted. var character single variable name unnamed character vector variables created `c(...)`. variables used creating N quantiles. Default `get_inc_nm()$var` represents income concepts.","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/calc_deciles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate N qualtiles of a variables from the CEQ results — calc_deciles","text":"data frame addition column (s). One column     per `var` used computing deciles. provide     `var = \"ypf_SA2\"` resulting data frame contain     additional variable `ypf_SA2_decile`. specify list     variables, many additional variables created     extension `_decile` name.","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/calc_gini.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Gini coefficient from a numeric vector — calc_gini","title":"Compute Gini coefficient from a numeric vector — calc_gini","text":"Compute Gini coefficient numeric vector","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/calc_gini.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Gini coefficient from a numeric vector — calc_gini","text":"","code":"calc_gini(x, w = rep(1, length(x)), na.rm = TRUE, drop_zero_and_less = TRUE)"},{"path":"https://wbepl.github.io/devCEQ/reference/calc_gini.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Gini coefficient from a numeric vector — calc_gini","text":"x, w numeric vectors values population weights equal length na.rm logical `TRUE` bu default. omit NA values drop_zero_and_less logical `TRUE` bu default drop negarive values zeros","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/calc_pov_fgt.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Theil index from a numeric vector — calc_pov_fgt","title":"Compute Theil index from a numeric vector — calc_pov_fgt","text":"Compute Theil index numeric vector","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/calc_pov_fgt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Theil index from a numeric vector — calc_pov_fgt","text":"","code":"calc_pov_fgt(x, pl, alpha = 0, w = rep(1, length(x)), na.rm = TRUE, ...)"},{"path":"https://wbepl.github.io/devCEQ/reference/calc_pov_fgt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Theil index from a numeric vector — calc_pov_fgt","text":"x, w numeric vectors values population weights equal length pl poverty line alpha Foster-Greer-Thorbecke (FGT) povert parameter na.rm logical `TRUE` bu default. omit NA values","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/calc_theil.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Theil index from a numeric vector — calc_theil","title":"Compute Theil index from a numeric vector — calc_theil","text":"Compute Theil index numeric vector","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/calc_theil.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Theil index from a numeric vector — calc_theil","text":"","code":"calc_theil(x, w = rep(1, length(x)), na.rm = TRUE, drop_zero_and_less = TRUE)"},{"path":"https://wbepl.github.io/devCEQ/reference/calc_theil.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Theil index from a numeric vector — calc_theil","text":"x, w numeric vectors values population weights equal length na.rm logical `TRUE` bu default. omit NA values drop_zero_and_less logical `TRUE` bu default drop negarive values zeros","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/create_microsim.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a microsimulation app's folder — create_microsim","title":"Create a microsimulation app's folder — create_microsim","text":"Create directory key app's files `app.R` needed development deployment microsimulation Shiny app Copies template app folder structure location/name specified. Creates RStudio project simplify  workflow.","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/create_microsim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a microsimulation app's folder — create_microsim","text":"","code":"create_microsim(   path,   open = TRUE,   app_name = basename(path),   newSession = FALSE )"},{"path":"https://wbepl.github.io/devCEQ/reference/create_microsim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a microsimulation app's folder — create_microsim","text":"path full path place app's folder must along yet existing app folder name. folder created automatically. open logical, app's folder opened RStudio project. app_name optional. name folder app . newSession Boolean (default FALSE); project opened new session, #' current RStudio session switch project?","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/create_microsim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a microsimulation app's folder — create_microsim","text":"return value, , executing function.","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/flextable_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Configurate a flextable — flextable_config","title":"Configurate a flextable — flextable_config","text":"Configurate flextable","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/flextable_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configurate a flextable — flextable_config","text":"","code":"flextable_config(dta, title = NULL, digits = 3, merge = TRUE)"},{"path":"https://wbepl.github.io/devCEQ/reference/gen_ceq_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a local CEQ UI function — gen_ceq_ui","title":"Generate a local CEQ UI function — gen_ceq_ui","text":"Generate local CEQ UI function","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/gen_ceq_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a local CEQ UI function — gen_ceq_ui","text":"","code":"gen_ceq_ui(   fn_results_ui = fn_results_ui_dummy,   theme_fn = function() shinythemes::shinytheme(\"cerulean\"),   style_logo_position = NULL,   inp_nav_width = NULL,   ... )"},{"path":"https://wbepl.github.io/devCEQ/reference/gen_one_inp_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a table with inputs instead of inputs with lables — gen_one_inp_table","title":"Generate a table with inputs instead of inputs with lables — gen_one_inp_table","text":"Generate table inputs instead inputs lables","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/gen_one_inp_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a table with inputs instead of inputs with lables — gen_one_inp_table","text":"","code":"gen_one_inp_table(inp_ui_str, inp_table_str_one)"},{"path":"https://wbepl.github.io/devCEQ/reference/gen_tabinp_ui_front.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a function based on `gen_tabinp_ui` for generating tabs UI — gen_tabinp_ui_front","title":"Generates a function based on `gen_tabinp_ui` for generating tabs UI — gen_tabinp_ui_front","text":"Generates function based `gen_tabinp_ui` generating tabs UI","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/gen_tabinp_ui_front.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a function based on `gen_tabinp_ui` for generating tabs UI — gen_tabinp_ui_front","text":"","code":"gen_tabinp_ui_front(   inp_tab_str = NULL,   inp_table_str = NULL,   scroll_panel_style =     \"max-height: calc(100vh - 12rem); overflow-y: scroll; overflow-x: hidden;\",   ... )"},{"path":"https://wbepl.github.io/devCEQ/reference/gen_tabinp_ui_front.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a function based on `gen_tabinp_ui` for generating tabs UI — gen_tabinp_ui_front","text":"inp_tab_str tibble structure tabs app. Requires two columns: `tab_name` `group_order`. first one indicates name tab. second one indicates order well-group including tab.","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/get_all_inps.html","id":null,"dir":"Reference","previous_headings":"","what":"Return all inputs from the raw inputs structure — get_all_inps","title":"Return all inputs from the raw inputs structure — get_all_inps","text":"Return inputs raw inputs structure","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/get_all_inps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return all inputs from the raw inputs structure — get_all_inps","text":"","code":"get_all_inps(dta)"},{"path":"https://wbepl.github.io/devCEQ/reference/get_all_inps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return all inputs from the raw inputs structure — get_all_inps","text":"data dataframe raw inputs structure","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/get_diffdf_sum.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise the `diffdf::diffdf` results in a compact table — get_diffdf_sum","title":"Summarise the `diffdf::diffdf` results in a compact table — get_diffdf_sum","text":"Summarise `diffdf::diffdf` results compact table","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/get_diffdf_sum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise the `diffdf::diffdf` results in a compact table — get_diffdf_sum","text":"","code":"get_diffdf_sum(dta)  mydiff(base_dta, compare_dta, key = c(\"numind\", \"hhid\"), tollerance = 0.01)  get_MAD(dta)  compare_two(dta_base, dta_compare, tol = 0.01, keys = c(\"hhid\"))"},{"path":"https://wbepl.github.io/devCEQ/reference/get_diffdf_sum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise the `diffdf::diffdf` results in a compact table — get_diffdf_sum","text":"dta element list resulting diffdf::diffdf() function. Usually, elements list start `VarDiff`. base_dta base data frame compare_dta data frame compare base key key columns data frames used row--row comparison. NULL, data frames compared row order. tolerance numerical tolerance comparison (0.01 default).","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/get_diffdf_sum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise the `diffdf::diffdf` results in a compact table — get_diffdf_sum","text":"`get_diffdf_sum()` returns data frame summaries differences `B` - Base data `C` - Compare data frame variable present data. columns summary data frame consists : * `VARIABLE` name variable compared; * `Diff ` number rows different Base Compare   variable given provided tolerance;   Diff excl NA` number rows values Base   Compare non-NA difference tolerance; * `NA-!0 B*C|C*B[Total]` number rows **NA (missing)   value base non-Zero value Compare**, \"|\" comparison   Compare versus Base made total reported brackets; * `NA-0 B*C|C*B[Total]` number rows **NA (missing) value   base Zero value Compare**, \"|\" comparison   Compare versus Base made total reported brackets; * `MAD` average absolute deviation base compare   (rounded), .e. $\\sum_i|\\textBase - \\textCompare| / N$,   $$ index row different Base Compare   given tolerance (missing/NA values converted zero); * `Mean ABS dev/Base` mean absolute deviation base   compare divided base value multiplied 100 digits), .e. $\\sum_i|\\textBase - \\textCompare| / N$, $$   index row different Base Compare given   tolerance;","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/get_diffdf_sum.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Summarise the `diffdf::diffdf` results in a compact table — get_diffdf_sum","text":"mydiff(): Compare base compage data using diffdf::diffdf() matching columns . get_MAD(): Computed summary statistics differences single value compare_two(): Compares two data sets prints knittable summary","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/get_dta_gini.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Gini index for all market concepts for a single simulation — get_dta_gini","title":"Calculate Gini index for all market concepts for a single simulation — get_dta_gini","text":"Calculate Gini index market concepts single simulation","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/get_dta_gini.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Gini index for all market concepts for a single simulation — get_dta_gini","text":"","code":"get_dta_gini(   dta,   policy_name = NULL,   income_vars_tbl = NULL,   wt_var = \"pcweight\",   para_names = tibble(parameter = c(\"Gini\", \"Theil\"), label = c(\"Gini index\",     \"Theil index\")),   ... )"},{"path":"https://wbepl.github.io/devCEQ/reference/get_dta_gini.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Gini index for all market concepts for a single simulation — get_dta_gini","text":"dta data frame simulation results. income_vars_tbl data frame two character columns: `var` `var_title`. `var` column variable names returned data set. `var_title` variable name want appear resulting table. See example results functions `get_inc_nm()` `get_var_nm()` wt_var character name single variable used weighting variable calculation. Default get_wt_nm()$var. wt_var provided one provided present `dta`, warning prompted.","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/get_dta_pov.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate poverty  for a single simulation at the national poverty line — get_dta_pov","title":"Calculate poverty  for a single simulation at the national poverty line — get_dta_pov","text":"Calculate poverty  single simulation national poverty line","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/get_dta_pov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate poverty  for a single simulation at the national poverty line — get_dta_pov","text":"","code":"get_dta_pov(   dta,   policy_name = NULL,   poverty_line_var = NULL,   poverty_line_value = NULL,   income_vars_tbl = NULL,   wt_var = NULL,   para_names = tibble(parameter = c(\"rate\", \"headcount\", \"gap\", \"severity\"), label =     c(\"Poverty rate\", \"Poverty headcount\", \"Poverty gap\", \"Poverty severity\") %>%     factor(., levels = .)),   ... )"},{"path":"https://wbepl.github.io/devCEQ/reference/get_dta_pov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate poverty  for a single simulation at the national poverty line — get_dta_pov","text":"dta data frame simulation results. income_vars_tbl data frame two character columns: `var` `var_title`. `var` column variable names returned data set. `var_title` variable name want appear resulting table. See example results functions `get_inc_nm()` `get_var_nm()` wt_var character name single variable used weighting variable calculation. Default get_wt_nm()$var. wt_var provided one provided present `dta`, warning prompted. poverty_line numeric, indicating poverty line Indonesian Rupiah per person per day.","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/load_input_xlsx.html","id":null,"dir":"Reference","previous_headings":"","what":"Loads the input structure data into R  from an Excel file. — load_input_xlsx","title":"Loads the input structure data into R  from an Excel file. — load_input_xlsx","text":"Loads input structure data R  Excel file.","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/load_input_xlsx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loads the input structure data into R  from an Excel file. — load_input_xlsx","text":"","code":"load_input_xlsx(path)  inp_str_test(   inp_raw_str,   fn_inp_str = gen_inp_str,   fn_inp_ui = gen_tabinp_ui,   ns = NS(NULL),   ... )  gen_inp_str_front(inp_table_str = NULL, ...)  gen_inp_str(inp_raw_str, n_choices, inp_table_str = NULL, ns = NS(NULL), ...)  test_gen_inp_front_simple(   inp_raw_str,   inp_tab_str = NULL,   inp_table_str = NULL,   n_choices = 2 )  test_gen_inp_front_tabs(   inp_raw_str,   inp_tab_str = NULL,   inp_table_str = NULL,   n_choices = 2 )  test_gen_inp_front_tabs_file(path)  load_inputtabs_xlsx(path)  load_inputtables_xlsx(path)"},{"path":"https://wbepl.github.io/devCEQ/reference/load_input_xlsx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loads the input structure data into R  from an Excel file. — load_input_xlsx","text":"path path pre-defined Excel file#' inp_raw_str inputs structure returned `load_input_xlsx()` fn_inp_str, fn_inp_ui, ns internal supporting functions. ns name space function `NS(NULL)` default ... passed functions within inp_table_str structure tables inputs organized (NULL default) n_choices number policy choices generate inp_raw_str, inp_tab_str, inp_table_str, n_choices input layout options","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/load_input_xlsx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loads the input structure data into R  from an Excel file. — load_input_xlsx","text":"data frame detailed input structure.","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/load_input_xlsx.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Loads the input structure data into R  from an Excel file. — load_input_xlsx","text":"inp_str_test(): Test RAW inputs structure generates set UI elements returns long list HTML tags elements used building UI. fails, indicates app likely fail well. gen_inp_str_front(): Wrapper around `gen_inp_str()` used providing table structure inside functions. Returns `gen_inp_str()` function predefined parameters data can executed generating input structure. gen_inp_str(): Generate data frame inputs UI used creating inputs page UI test_gen_inp_front_simple(): Test input page content generation single tab test_gen_inp_front_tabs(): Test input UI generation process providing path inputs structure Excel file. Launches shiny app inputs properly rendered single input tab. test_gen_inp_front_tabs_file(): `test_gen_inp_front_tabs()`, top input generation also creates tabs switching groups inputs. load_inputtabs_xlsx(): Loads RAW structure tabs used structuring inputs load_inputtables_xlsx(): Loads RAW structure tables organizing inputs input page.","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/load_input_xlsx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loads the input structure data into R  from an Excel file. — load_input_xlsx","text":"","code":"if (FALSE) { system.file(   \"examples\",   \"ceq_example_simple\",   \"data-app\",   \"simple-inputs-structure.xlsx\",   package = \"devCEQ\" ) |> load_input_xlsx() }   if (FALSE) { }  if (FALSE) { a <- system.file(     \"examples\",     \"ceq_example_simple\",     \"data-app\",     \"simple-inputs-structure.xlsx\",     package = \"devCEQ\"   ) |> load_input_xlsx() a |> test_gen_inp_front_simple() }  if (FALSE) { } if (FALSE) { }"},{"path":"https://wbepl.github.io/devCEQ/reference/make_get_inp_fn.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a function that extracts inputs frmo the inputs list do not returning NAs — make_get_inp_fn","title":"Return a function that extracts inputs frmo the inputs list do not returning NAs — make_get_inp_fn","text":"Return function extracts inputs frmo inputs list returning NAs","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/make_get_inp_fn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a function that extracts inputs frmo the inputs list do not returning NAs — make_get_inp_fn","text":"","code":"make_get_inp_fn(actual_inps)"},{"path":"https://wbepl.github.io/devCEQ/reference/make_get_inp_fn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a function that extracts inputs frmo the inputs list do not returning NAs — make_get_inp_fn","text":"actual_inps inputs list inputs","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/make_run_sim_server.html","id":null,"dir":"Reference","previous_headings":"","what":"User-side functional for customizing the run-sim server with own functions — mod_generic_run_sim_server","title":"User-side functional for customizing the run-sim server with own functions — mod_generic_run_sim_server","text":"makes sure inputs policy choices   change policy choice identical baseline, simulation   executed .","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/make_run_sim_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User-side functional for customizing the run-sim server with own functions — mod_generic_run_sim_server","text":"","code":"mod_generic_run_sim_server(   id,   run = reactive(NULL),   presim = reactive(NULL),   inps = reactive(NULL),   all_inps = reactive(NULL),   ceq_progress = reactive(NULL),   fn_add_missing_inp = add_missing_inp_generic,   fn_ceq_sim = ceq_sim_generic,   fn_ceq_pre_postsim = ceq_pre_postsim_generic,   ... )  make_run_sim_server(   fn_add_missing_inp = add_missing_inp_generic,   fn_ceq_sim = ceq_sim_generic,   fn_ceq_pre_postsim = ceq_pre_postsim_generic )  add_missing_inp_generic(inps, all_inps, ...)  ceq_sim_generic(inp, presim, ...)  ceq_pre_postsim_generic(x, ...)"},{"path":"https://wbepl.github.io/devCEQ/reference/make_run_sim_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"User-side functional for customizing the run-sim server with own functions — mod_generic_run_sim_server","text":"run reactive invalidation variable signals run simulation. presim reactive pre-simulation data inps reactive list#' all_inps reactive complete list inputs passed `fn_add_missing_inp`. ceq_progress reactive tha contains progress function created `fct_make_ceq_progress` fn_add_missing_inp function takes two vectors pol. ch. (`inps` `all_inps`) adds missing elements first pol. ch. name.#' fn_ceq_sim function two inputs: `inps` `presim`. must return single data frame simulation results. fn_ceq_pre_postsim function performs post-simulation calculations relevant perform stage. , example aggregating deciles creating bulk default plots.","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/make_run_sim_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User-side functional for customizing the run-sim server with own functions — mod_generic_run_sim_server","text":"`reactiveVal` object contains list data sets   simulation results, pre-simulations post simulation data.   meant save space rather hold information one object.   results object list consists : `run`, `policy_sim_raw`,   `run_timestamp` `policy_sim_agg`. passed post-sim   module. function need supplied arguments   `mod_generic_run_sim_server` function `id`, `run`, `presim`,   `inps`, `all_inps`, `ceq_progress`.","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/make_run_sim_server.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"User-side functional for customizing the run-sim server with own functions — mod_generic_run_sim_server","text":"mod_generic_run_sim_server(): Generic CEQ runner server uses CEQ functions run analysis based `persim` `inp` args. add_missing_inp_generic(): inputs missing CEQ inputs list. ceq_sim_generic(): generic function CEQ simulation ceq_pre_postsim_generic(): generic function CEQ pre-postsim","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/make_tax_brackets.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a data frame with the tax brakes — make_tax_brackets","title":"Create a data frame with the tax brakes — make_tax_brackets","text":"Requires two vectors equal length. One upper tax thresholds another one tax rates","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/make_tax_brackets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a data frame with the tax brakes — make_tax_brackets","text":"","code":"make_tax_brackets(thresholds, rates)"},{"path":"https://wbepl.github.io/devCEQ/reference/match_tax_brackets.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply tax brackets to the data and impute new tax variable — match_tax_brackets","title":"Apply tax brackets to the data and impute new tax variable — match_tax_brackets","text":"Apply tax brackets data impute new tax variable","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/match_tax_brackets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply tax brackets to the data and impute new tax variable — match_tax_brackets","text":"","code":"match_tax_brackets(   dta,   base_var,   rules,   new_var,   calc_drop = TRUE,   low_thld_rule = `>`,   up_thld_rule = `<=` )"},{"path":"https://wbepl.github.io/devCEQ/reference/match_tax_brackets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply tax brackets to the data and impute new tax variable — match_tax_brackets","text":"dta original data set compute tax levels base_var string variable name used used income rules data frame tax brackets rules returned `make_tax_brackets` new_var string new variable create based formula cum_tax + (base_var - lower) * rate calc_drop logical TRUE default compute tax level drop auxiliary variables low_thld_rule rule comparing income lower threshold. usually `>` (default) `>`. up_thld_rule rule comparing income upper threshold. usually `<=`  (default) `<`.","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/microsim_dta.html","id":null,"dir":"Reference","previous_headings":"","what":"Exemplary microsimulation results data — microsim_dta","title":"Exemplary microsimulation results data — microsim_dta","text":"fictitious data set meant show ideal misro-simulation   results data look like.","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/microsim_dta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exemplary microsimulation results data — microsim_dta","text":"","code":"microsim_dta"},{"path":"https://wbepl.github.io/devCEQ/reference/microsim_dta.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Exemplary microsimulation results data — microsim_dta","text":"## `microsim_dta` data frame 7,240 rows 60 columns: country Country name iso2, iso3 2 & 3 letter ISO country codes year Year","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/microsim_dta.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Exemplary microsimulation results data — microsim_dta","text":"data-raw/DATASETS.R","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/mod_ceq_progress.html","id":null,"dir":"Reference","previous_headings":"","what":"CEQ progress module that initializes the progress object — mod_ceq_progress","title":"CEQ progress module that initializes the progress object — mod_ceq_progress","text":"CEQ progress module initializes progress object","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/mod_ceq_progress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CEQ progress module that initializes the progress object — mod_ceq_progress","text":"","code":"mod_ceq_progress(id, run = reactive(NULL), prog_length = 4)  fct_make_ceq_progress(session, prog_length = 4)  fct_big_step_ceq_progress(prog, message = NULL, detail = NULL, ...)  fct_samll_step_ceq_progress(   prog,   n_small = 4,   message = NULL,   detail = NULL,   ... )  fct_close_ceq_progress(prog, title = \"Simulation is completed\", ...)"},{"path":"https://wbepl.github.io/devCEQ/reference/mod_ceq_progress.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"CEQ progress module that initializes the progress object — mod_ceq_progress","text":"fct_make_ceq_progress(): Initialize progress. fct_big_step_ceq_progress(): big step progress fct_samll_step_ceq_progress(): small step progress fct_close_ceq_progress(): small step progress","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/mod_generic_run_postsim_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic post-simulation runner server — mod_generic_run_postsim_server","title":"Generic post-simulation runner server — mod_generic_run_postsim_server","text":"Generic post-simulation runner server","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/mod_generic_run_postsim_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic post-simulation runner server — mod_generic_run_postsim_server","text":"","code":"mod_generic_run_postsim_server(   id,   sim_res = reactive(NULL),   ceq_progress = NULL,   fn_ceq_postsim = function(x, progress_tick = function() {  }) {      progress_tick()          x  },   ... )"},{"path":"https://wbepl.github.io/devCEQ/reference/mod_generic_run_postsim_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic post-simulation runner server — mod_generic_run_postsim_server","text":"sim_res reactive containing results `mod_generic_run_sim_server` ceq_progress reactive tha contains progress function created `fct_make_ceq_progress` fn_ceq_postsim function performs post-simulation calculations relevant perform stage. , example aggregating deciles creating bulk default plots. accepts two arguments `sim_res()` `progress_tick`, function ticks progress.","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/mod_generic_run_postsim_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic post-simulation runner server — mod_generic_run_postsim_server","text":"`reactiveValues` object contains list data sets   post simulation results usually can directly plotted.","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/mod_inp_n_choices_server.html","id":null,"dir":"Reference","previous_headings":"","what":"(internal) Sub-module for the policy number inputs — mod_inp_n_choices_server","title":"(internal) Sub-module for the policy number inputs — mod_inp_n_choices_server","text":"`mod_inp_n_choices_server()` Server logic `mod_inp_n_choices_ui()` UI module `get_n_policy_types()` returns valid types n-policy input `make_n_choice_ui()` internal function creates UI n-policy input#' `update_n_choice_ui()` internal function used update n-policy input. `test_mod_inp_n_choices_all_ui()` `test_mod_inp_n_choices()` miscellaneous testing functions rerun shiny apps. shiny Module.","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/mod_inp_n_choices_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(internal) Sub-module for the policy number inputs — mod_inp_n_choices_server","text":"","code":"mod_inp_n_choices_server(   id,   min = reactive(1),   max = reactive(4),   value = reactive(2),   n_policy_type = reactive(get_n_policy_types()[[1]]),   n_policy_update = reactive(NULL),   ... )  mod_inp_n_choices_ui(id)  make_n_choice_ui(   ns = NS(NULL),   value = 1,   min = 1,   max = 2,   n_policy_type = \"slider\",   ... )  get_n_policy_types()  update_n_choice_ui(   input,   output,   session,   new_n_choices = NULL,   n_policy_type = get_n_policy_types()[[1]],   ... )  test_mod_inp_n_choices(id = NULL)  test_mod_inp_n_choices_all_ui(id = NULL)"},{"path":"https://wbepl.github.io/devCEQ/reference/mod_inp_n_choices_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(internal) Sub-module for the policy number inputs — mod_inp_n_choices_server","text":"id, input, output, session Internal parameters shiny. min, max, value, n_policy_type, n_policy_update reactive numeric strings similar params `make_n_choice_ui()` value, min, max numeric number choices selected, minimum maximum n_policy_type reactive string type n-policy input, one \"numericInline\", \"numeric\", \"slider\", \"dropdown\", \"none\". Use `get_n_policy_types()` check valid types. ... used ns namespace function wrap IDs around `NS(...)`. new_n_choices new value policy choices update .","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/mod_inp_n_choices_server.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"(internal) Sub-module for the policy number inputs — mod_inp_n_choices_server","text":"","code":"if (FALSE) { # interactive()  test_mod_inp_n_choices() test_mod_inp_n_choices_all_ui() }"},{"path":"https://wbepl.github.io/devCEQ/reference/mod_inputs_btns_server.html","id":null,"dir":"Reference","previous_headings":"","what":"(internal) Module with buttons logic for the input page — mod_inputs_btns_server","title":"(internal) Module with buttons logic for the input page — mod_inputs_btns_server","text":"`mod_inputs_btns_ui()` UI part module. `mod_inputs_btns_server()` UI part module. `test_mod_inputs_btn_static_ui()` test-function static buttons appearance. Launches simple shiny app displays static buttons UI. `test_mod_inputs_btn()` test-function checking buttons server-generated number policies. Launches shiny app ","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/mod_inputs_btns_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(internal) Module with buttons logic for the input page — mod_inputs_btns_server","text":"","code":"mod_inputs_btns_server(   id = NULL,   sim_export_dta = reactive(NULL),   n_policy = c(1, 2, 1),   n_policy_type = c(\"numericInline\", \"numeric\", \"slider\", \"dropdown\", \"none\"),   ... )  test_mod_inputs_btn(id = NULL, n_policy_type = \"slider\")  test_mod_inputs_btn_static_ui(di = NULL)  mod_inputs_btns_ui(id = NULL, ...)"},{"path":"https://wbepl.github.io/devCEQ/reference/mod_inputs_btns_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(internal) Module with buttons logic for the input page — mod_inputs_btns_server","text":"id namespace id (internal shiny parameter) used UI module. sim_export_dta Reactive internal simulation data used server export simulation inputs results. n_policy vector 3 numeric values c(1,2,1) default. first second minimum maximum number policy choices. numeric initialized number policy choices. n_policy_type character defines types changer number policy scenarios. one \"numericInline\" (default), \"numeric\", \"slider\", \"dropdown\", \"none\". ... used","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/mod_inputs_btns_server.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"(internal) Module with buttons logic for the input page — mod_inputs_btns_server","text":"","code":"if (FALSE) { # interactive()  # Launches an app with all the buttons in a static form test_mod_inputs_btn_static_ui()  # Launches an app with all types of policy number input and extra diagnostic test_mod_inputs_btn() }"},{"path":"https://wbepl.github.io/devCEQ/reference/mod_render_inp_tabs_srv.html","id":null,"dir":"Reference","previous_headings":"","what":"Module for generating and re-generating inputs UI on the server — mod_render_inp_tabs_srv","title":"Module for generating and re-generating inputs UI on the server — mod_render_inp_tabs_srv","text":"Module generating re-generating inputs UI server","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/mod_render_inp_tabs_srv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Module for generating and re-generating inputs UI on the server — mod_render_inp_tabs_srv","text":"","code":"mod_render_inp_tabs_srv(   id,   switches = reactive(get_test_tab_switches()),   tabs = reactive(get_test_tabs(id)),   summary_tab = reactive(mtcars),   header = reactive(NULL),   tab_header = reactive(NULL),   tab_footer = reactive(NULL),   ... )"},{"path":"https://wbepl.github.io/devCEQ/reference/mod_render_inp_tabs_srv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Module for generating and re-generating inputs UI on the server — mod_render_inp_tabs_srv","text":"switches reactive returns list key information needed tab switches rendered:","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/test_mod_run_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple app for testing module `mod_generic_run_sim_server`\n  with the user-defined logic — test_mod_run_sim","title":"Simple app for testing module `mod_generic_run_sim_server`\n  with the user-defined logic — test_mod_run_sim","text":"Simple app testing module `mod_generic_run_sim_server`   user-defined logic","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/test_mod_run_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple app for testing module `mod_generic_run_sim_server`\n  with the user-defined logic — test_mod_run_sim","text":"","code":"test_mod_run_sim(   sim_inp_path = NULL,   presim_path = NULL,   raw_str_path = NULL,   id = NULL,   fn_sim_srvr = make_run_sim_server(),   inps = reactive(list(policy0 = list(policy_choices = list(a = 1, b = 2), policy_as_base     = FALSE, policy_name = \"Test 1\"), policy1 = list(policy_choices = list(a = 3, b = 4),     policy_as_base = FALSE, policy_name = \"Test 2\"))),   all_inps = reactive(list(a = 1, b = 2, c = 3, d = 3)),   presim = reactive(list(baseline = tibble(baseline = 1:10), presim_1 = tibble(presim =     c(5:9)))) )"},{"path":"https://wbepl.github.io/devCEQ/reference/test_results_mod.html","id":null,"dir":"Reference","previous_headings":"","what":"Tests a simple results page module providing it with the sim_res — test_results_mod","title":"Tests a simple results page module providing it with the sim_res — test_results_mod","text":"Tests simple results page module providing sim_res","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/test_results_mod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tests a simple results page module providing it with the sim_res — test_results_mod","text":"","code":"test_results_mod(sim_res = NULL, ui_side, server_side, id = \"testid\")"},{"path":"https://wbepl.github.io/devCEQ/reference/validate_result.html","id":null,"dir":"Reference","previous_headings":"","what":"helper for validating outputs — validate_result","title":"helper for validating outputs — validate_result","text":"helper validating outputs","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/validate_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper for validating outputs — validate_result","text":"","code":"validate_result(dta, err_msg = \"Error\")"},{"path":"https://wbepl.github.io/devCEQ/reference/wb_colours.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to extract wb colors as hex codes — wb_cols","title":"Function to extract wb colors as hex codes — wb_cols","text":"Function extract wb colors hex codes Return function interpolate wb color palette Color scale constructor wb colors Fill scale constructor wb colors","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/wb_colours.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to extract wb colors as hex codes — wb_cols","text":"","code":"wb_cols(...)  wb_palettes  wb_pal(palette = \"main\", reverse = FALSE, ...)  scale_color_wb(palette = \"main2\", discrete = TRUE, reverse = FALSE, ...)  scale_fill_wb(palette = \"main2\", discrete = TRUE, reverse = FALSE, ...)"},{"path":"https://wbepl.github.io/devCEQ/reference/wb_colours.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Function to extract wb colors as hex codes — wb_cols","text":"object class list length 6.","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/wb_colours.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to extract wb colors as hex codes — wb_cols","text":"... Additional arguments passed discrete_scale() scale_fill_gradientn(), used respectively discrete TRUE FALSE palette Character name palette wb_palettes reverse Boolean indicating whether palette reversed discrete Boolean indicating whether color aesthetic discrete ","code":""},{"path":"https://wbepl.github.io/devCEQ/reference/wb_colours.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to extract wb colors as hex codes — wb_cols","text":"","code":"if (FALSE) { wb_cols() wb_cols(\"red\") wb_cols(\"red\", \"blue\") wb_cols(\"blue\", \"red\")  library(ggplot2) ggplot(mtcars, aes(hp, mpg)) +   geom_point(color = wb_cols(\"red\"),              size = 4, alpha = .8) }  if (FALSE) { wb_pal(\"main2\") wb_pal(\"neutral_all\")(10) }   if (FALSE) { library(ggplot2) ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Species)) +   geom_point(size = 4) +   scale_color_wb(palette = \"main2\")  ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Sepal.Length)) +   geom_point(size = 4, alpha = .6) +   scale_color_wb(discrete = FALSE, palette = \"neutral_warm\")   ggplot(mpg, aes(manufacturer, fill = manufacturer)) +   geom_bar() +   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +   scale_fill_wb(palette = \"main3\", guide = \"none\") }"}]
