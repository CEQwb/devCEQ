[{"path":"https://wbepl.github.io/devCEQ/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 devCEQ authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://wbepl.github.io/devCEQ/articles/microsim-stata.html","id":"example-of-a-microsimulation-in-stata","dir":"Articles","previous_headings":"","what":"Example of a microsimulation in Stata","title":"Running microsimulations in Stata","text":"example, let us follow “dummy” version microsimulation: Example_FiscalSim. developed training future microsim developers exemplifies best practices fiscal microsimulation development.","code":""},{"path":"https://wbepl.github.io/devCEQ/articles/microsim-stata.html","id":"setting-up-the-working-directory","dir":"Articles","previous_headings":"Example of a microsimulation in Stata","what":"Setting up the working directory","title":"Running microsimulations in Stata","text":"Create folder cloud drive (better synchronized drive), later develop R Shiny translation microsimulation. case, folder EPL/devCEQaux. Clone folder example microsimulation Stata : https://github.com/wbEPL/Example_FiscalSim. Open Example_FiscalSim folder explore content. can see directory tree , Example_FiscalSim contains folders. /01.Data/ folder turn three sub folders /01.pre-simulation/, /02.intermediate/, /03.simulation-results/ two data files raw data Example_FiscalSim_dem_inc_data_raw.dta, Example_FiscalSim_exp_data_raw.dta. Ultimately, raw data outside project, packed together simplicity. /01.Data/01.pre-simulation/ place pre-simulation data stored per data flow structure . /02.Dofile/ place simulation code developed. Key simulation code scripts 01_.._.12_output.. /02.Dofile/00_master.master script running simulation. /03.Tool/Example_FiscalSim.xlsx Excel file simulation inputs (policy parameters, tax rates, subsidies) outputs (poverty inequality estimates, incidences, etc.).","code":"./devCEQaux/ └── Example_FiscalSim     ├── 01.Data     │   ├── 01.pre-simulation     │   ├── 02.intermediate     │   ├── 03.simulation-results     │   ├── Example_FiscalSim_dem_inc_data_raw.dta     │   └── Example_FiscalSim_exp_data_raw.dta     ├── 02.Dofile     │   ├── 00_master.do     │   ├── 01_input_data.do     │   ├── 02_gross_market_income.do     │   ├── 03_net_expenditures.do     │   ├── 04_income_uprating.do     │   ├── 05_SSC_direct_taxes.do     │   ├── 06_pensions_direct_transfers.do     │   ├── 07_expenditure_adjustment.do     │   ├── 08_indirect_subsidies.do     │   ├── 09_indirect_taxes.do     │   ├── 10_inkind_transfers.do     │   ├── 11_income_concepts.do     │   ├── 12_output.do     │   ├── ados     │   │   ├── ...     │   └── Example_FiscalSim.stpr     ├── 03.Tool     │   └── Example_FiscalSim.xlsx     └── README.md"},{"path":"https://wbepl.github.io/devCEQ/articles/microsim-stata.html","id":"running-pre-simulation-in-stata","dir":"Articles","previous_headings":"Example of a microsimulation in Stata","what":"Running pre-simulation in Stata","title":"Running microsimulations in Stata","text":"run Stata pre-simulation, need : Open /02.Dofile/00_master.. Set global variable path lines 10-30 /Example_FiscalSim/ save . Execute /02.Dofile/00_master.beginning *Simulation stage (Lines 1-89). execute pre-simulation part analysis creating pre-simulation data sets (see folder structure ). may notice now, data files added 01.Data/01.pre-simulation folder. files used simulation change simulation simulation. change policy parameters changing. also serve backbone simulation translation R. error prompted, troubleshoot . likely global variable path set properly.","code":"./devCEQaux/ └── Example_FiscalSim     ├── 01.Data     │   ├── 01.pre-simulation     │   │   ├── Example_FiscalSim_dem_data_SY.dta     │   │   ├── Example_FiscalSim_dem_inc_data.dta     │   │   ├── Example_FiscalSim_electr_data.dta     │   │   ├── Example_FiscalSim_exp_data_SY.dta     │   │   └── Example_FiscalSim_market_income_data_SY.dta     │   ├── 02.intermediate     │   ├── 03.simulation-results     │   ├── Example_FiscalSim_dem_inc_data_raw.dta     │   └── Example_FiscalSim_exp_data_raw.dta     ├── 02.Dofile     │   ├── ...     │   └── ados     │       ├── ...     ├── 03.Tool     │   └── Example_FiscalSim.xlsx     └── README.md"},{"path":"https://wbepl.github.io/devCEQ/articles/microsim-stata.html","id":"executing-full-simulation-in-stata","dir":"Articles","previous_headings":"Example of a microsimulation in Stata","what":"Executing full simulation in Stata","title":"Running microsimulations in Stata","text":"run full simulation Stata, need : Open /02.Dofile/00_master.previous changes make sure pre-simulation step executed correctly. Comment pre-simulation stage (lines 83-89). Execute full simulation beginning end (line 1 end 00_master.) Excel file simulation results open end able explore simulation results.","code":""},{"path":"https://wbepl.github.io/devCEQ/articles/microsim-stata.html","id":"saving-intermediate-results-from-stata","dir":"Articles","previous_headings":"Example of a microsimulation in Stata","what":"Saving intermediate results from Stata","title":"Running microsimulations in Stata","text":"Sometimes, simulations long, implementing tedious process simulation translation, re-implementing complex analysis R, might need save intermediate data sets Stata. Please make sure saving data /01.Data/02.intermediate/ folder using regular Stata commands :","code":"save \"${data}\\02.intermediate\\interm_data_1.dta\", replace"},{"path":"https://wbepl.github.io/devCEQ/articles/r-workflow.html","id":"working-directory","dir":"Articles","previous_headings":"","what":"Working directory","title":"Setting up a workflow in R","text":"one previous steps, : Created folder project translating microsimulation EPL/devCEQaux. Cloned example microsimulation Stata https://github.com/wbEPL/Example_FiscalSim folder EPL/devCEQaux/Example_FiscalSim/. Now, need create project analysis R, subsequently become place, develop R Shiny application microsimulation.","code":""},{"path":"https://wbepl.github.io/devCEQ/articles/r-workflow.html","id":"creating-an-rstudio-project","dir":"Articles","previous_headings":"Working directory","what":"Creating an RStudio project","title":"Setting up a workflow in R","text":"root folder, perform translation analysis R execute Stata code, (example, EPL/devCEQaux folder) create R Studio project. Familiarize RStudio project basics needed R4DS. Workflow: scripts projects. example, use name Stata project add “_app” . result : “Example_FiscalSim_app”. way discriminate original Stata project R version . Note. R Studio project folder, file Example_FiscalSim_app.Rproj. Double-clicking file start R Studio . result following folder structure:","code":"./EPL/devCEQaux ├── Example_FiscalSim │   ├── 01.Data │   │   └── ... │   ├── 02.Dofile │   │   └── ... │   ├── 03.Tool │   │   └── Example_FiscalSim.xlsx │   └── README.md └── Example_FiscalSim_app     └── Example_FiscalSim_app.Rproj"},{"path":"https://wbepl.github.io/devCEQ/articles/r-workflow.html","id":"organizing-files-in-the-r-project-","dir":"Articles","previous_headings":"Working directory","what":"Organizing files in the R Project.","title":"Setting up a workflow in R","text":"general principles file organization R project : R folder used functions, scripts. data-app folder data used inside shiny app (input structure data file, pre-simulation data, baseline simulation results). dev folder one, place scripts. usually develop scripts re-saving pre-simulation data, performing manual quality assurance routines, developing validating simulation code R. inst/app folder exists auxiliary shiny-app related files, info-page.md markdown document shiny app landing page. root directory R project, : .gitignore file relevant git. project_name.proj file used launch R Studio current project. DESCRIPTION internal file relevant R package development. app.R key r script, launch shiny app. Now, create folder structure suggested (files). result roughly following:","code":""},{"path":"https://wbepl.github.io/devCEQ/articles/r-workflow.html","id":"creating-and-saving-the-first-script-in-r","dir":"Articles","previous_headings":"Working directory","what":"Creating and saving the first script in R","title":"Setting up a workflow in R","text":"Now, let us create first scrip R save name example-script.R dev folder. Try follow steps animation.","code":""},{"path":"https://wbepl.github.io/devCEQ/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Eduard Bukin. Author, maintainer.","code":""},{"path":"https://wbepl.github.io/devCEQ/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bukin E (2024). devCEQ: Development platform Shiny fiscal microsimulations. R package version 0.0.0.9024, https://wbepl.github.io/devCEQ/.","code":"@Manual{,   title = {devCEQ: Development platform for Shiny fiscal microsimulations},   author = {Eduard Bukin},   year = {2024},   note = {R package version 0.0.0.9024},   url = {https://wbepl.github.io/devCEQ/}, }"},{"path":"https://wbepl.github.io/devCEQ/index.html","id":"devceq-development-platform-for-shiny-fiscal-microsimulations","dir":"","previous_headings":"","what":"Development platform for Shiny fiscal microsimulations","title":"Development platform for Shiny fiscal microsimulations","text":"R package contains standardized infrastructure developing deploying country-specific fiscal microsimulations Shiny apps Poverty Equity Policy Lab. main goal apps provide users visual interface executing complex microsimulations, summarizing results. several apps deployed using devCEQ infrastructure: Senegal CEQ 2018, Côte d’Ivoire CEQ, Benin CEQ, Indonesia CEQ. devCEQ package evolved result developing independent apps Armenia v1 Armenia v2, El Salvador, Turkey, Romania CEQ, various aspects requirements application tested first. Essentially, devCEQ R Package standardizes data flow within microsimulation wraps user interface. package, developers can customize inputs page. Develop embed data simulation methodology core microsimulation. Finally built custom visualization either recycling existing modules developing new ones better results communication. example app .","code":""},{"path":[]},{"path":"https://wbepl.github.io/devCEQ/index.html","id":"pre-requisites","dir":"","previous_headings":"Getting started","what":"Pre-requisites","title":"Development platform for Shiny fiscal microsimulations","text":"expected everyone familiar Stata, can independently run CEQ-like microsimulations Stata, change code save different stages microsimulation analysis. Install latest versions R, Rtools, R Studio. Install GitHub Desktop familiarize basics workflow using Git Github.","code":""},{"path":"https://wbepl.github.io/devCEQ/index.html","id":"install-devceq-package","dir":"","previous_headings":"Getting started","what":"Install devCEQ package","title":"Development platform for Shiny fiscal microsimulations","text":"important package backbone microsimulation analysis. install , run console:","code":"if (!require(\"remotes\")) {   install.packages(\"remotes\") } remotes::install_github(\"wbEPL/devCEQ\", dependencies = TRUE, build_vignettes = FALSE)"},{"path":"https://wbepl.github.io/devCEQ/index.html","id":"run-an-example-microsimulation-app","dir":"","previous_headings":"Getting started","what":"Run an example microsimulation app","title":"Development platform for Shiny fiscal microsimulations","text":"Now, launch exemplary microsimulation app, run following command R console:  example shiny app supplied along package devCEQ. may explore content app structure navigating folder, located. located package , check folder, app , type R console. can also create local copy microsimulation app drive explore modify/develop components. , run code . Make sure provide proper path place, want app created. path argument specify folder, app well name app (“./FOLDER/AppName”). function create folders automatically. Template microsim app following structure, explore detail specific articles app development.","code":"library(devCEQ) CEQ_run_example() system.file(\"examples\", \"ceq_example_simple\", package = \"devCEQ\") |>    utils::browseURL() library(devCEQ) create_microsim(\"./microsim_simple_example\") ../microsim_simple_example ├── app.R ├── data-app │   └── simple-inputs-structure.xlsx ├── DESCRIPTION ├── inst │   └── app │       └── info-page.md ├── LICENSE ├── microsim_simple_example.Rproj ├── NAMESPACE ├── R │   ├── app_config.R │   ├── fct_simulation.R │   ├── fct_variables.R │   ├── mod_gini_povertyresults.R │   ├── mod_inc_ncp.R │   ├── mod_results.R │   └── _disable_autoload.R └── README.md"},{"path":"https://wbepl.github.io/devCEQ/index.html","id":"the-process-of-developing-a-microsimulation-and-its-shiny-app","dir":"","previous_headings":"","what":"The process of developing a microsimulation and its SHiny app","title":"Development platform for Shiny fiscal microsimulations","text":"guide/website meant equip users key skills need developing user interface microsimulation tools R Shiny. Follow tutorials consecutive order Articles . Limited functional documentation also available References. Overall, process microsimulation development consists two broad stages: Developing microsimulation Stata (Excel data input/output) polishing simulation methodology dissemination-ready state. ‘Translating’ final Stata microsimulation R, optimizing analysis, building Shiny dashboard around . first stage described detail, however, article Running microsimulations Stata contains best practices developing microsimulations Stata. Users advised follow examples article set properly workflow translating microsimulation Stata R. second stage focus guide. second stage, translation Stata methodology R happening Shiny dashboard created. translation process logical steps outlined . Several articles developed step. Please follow articles gradually reproduce examples familiarize translation process. Converting simulation methodology Stata R. Running microsimulations Stata Setting workflow R Re-saving pre-simulation data R Translating Stata code R comparing results R Stata Common R functions/approaches used translating standard Stata commands Automating inputs provision R Designing input page dashboard. Building inputs structure table testing layout app Advanced topics: tabs, input sub-tables, checkboxes, radio buttons Designing output page (visualization page) dashboard Defining key variables used output building Running exemplary visualization modules Using Stata inputs build moc-visualization page Advances topics: customizing output visualization Integrating input page, output page, simulation logic single dashboard","code":""}]
